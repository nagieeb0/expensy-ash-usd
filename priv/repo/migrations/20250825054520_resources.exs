defmodule Expensy.Repo.Migrations.Resources do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:expenses, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :description, :text
      add :amount, :money_with_currency, null: false
      add :date, :date
      add :notes, :text

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :category_id, :uuid, null: false
    end

    create table(:categories, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:expenses) do
      modify :category_id,
             references(:categories,
               column: :id,
               name: "expenses_category_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:categories) do
      add :name, :text, null: false
      add :description, :text
      add :monthly_budget, :money_with_currency, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end
  end

  def down do
    alter table(:categories) do
      remove :updated_at
      remove :inserted_at
      remove :monthly_budget
      remove :description
      remove :name
    end

    drop constraint(:expenses, "expenses_category_id_fkey")

    alter table(:expenses) do
      modify :category_id, :uuid
    end

    drop table(:categories)

    drop table(:expenses)
  end
end
